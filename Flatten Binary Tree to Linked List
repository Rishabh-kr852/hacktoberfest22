/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void pre(TreeNode* root, vector<int>& ans){
        if(!root) return;
        ans.push_back(root -> val);
        pre(root -> left, ans);
        pre(root -> right, ans);
    }

    void flatten(TreeNode* root) {
        vector<int> ans;
        pre(root, ans);

        for(int i = 1; i < ans.size(); i++){
            TreeNode* temp = new TreeNode();
            temp -> val = ans[i];
            root -> right = temp;
            root -> left = NULL;
            root = root -> right;
        }
    }
};
